// Code Generated by Sidekick is for learning and experimentation purposes only.

import { Component } from '@angular/core';
import { ActivatedRoute, RouterModule } from '@angular/router';
import { ProductService, Product } from '../../services/product.service'; // Make sure this path is correct!
import { NgFor, NgIf, NgClass } from '@angular/common';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-product-detail',
  standalone: true,
  imports: [NgFor, NgIf, NgClass, FormsModule, RouterModule],
  templateUrl: './product-detail.component.html'
})
export class ProductDetailComponent {
  product?: Product;
  quantity: number = 1;
  selectedImage: number = 0;
  activeTab: string = 'description';
  relatedProducts: Product[] = [];

  constructor(private route: ActivatedRoute, private productService: ProductService) {
    const id = Number(this.route.snapshot.paramMap.get('id'));
    this.product = this.productService.getProductById(id);

    // Find up to 4 other related products (could be category or any logic)
    const allProducts = this.productService.getProducts();
    this.relatedProducts = allProducts.filter(p => p.id !== id).slice(0, 4);
  }
// Code Generated by Sidekick is for learning and experimentation purposes only.

getFloor(val: number): number {
  return Math.floor(val);
}

  incrementQuantity() {
    if (this.product && this.quantity < this.product.stock) this.quantity++;
  }

  decrementQuantity() {
    if (this.quantity > 1) this.quantity--;
  }

  validateQuantity() {
    if (!this.product) return;
    if (this.quantity < 1) this.quantity = 1;
    if (this.quantity > this.product.stock) this.quantity = this.product.stock;
  }

  handleAddToCart() {
    // TODO: Replace with real cart service.
    alert(`${this.quantity} ${this.product?.name}(s) added to cart!`);
  }

  setActiveTab(tabName: string) {
    this.activeTab = tabName;
  }

  selectImage(idx: number) {
    this.selectedImage = idx;
  }
}
